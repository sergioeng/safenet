apply plugin: 'com.android.application'

   android {
       compileSdkVersion 28
       defaultConfig {
           applicationId "com.dodsoneng.falldetector"
           minSdkVersion 23
           targetSdkVersion 25
           versionCode 1
           versionName "a3.7"
//           project.ext.set("archivesBaseName", "detector-a3.7")
//           ndk {
//               platformVersion = 24
//               moduleName = 'detector'
//               toolchain = 'clang'
//               CFlags.add('-fintegrated-as')
//               CFlags.add('-std=c99')
//               ldLibs.addAll(['android','OpenSLES', 'log'])
//               abiFilters "x86", "armeabi-v7a", "armeabi"
//           }
           // android.ndk

           externalNativeBuild {
               cmake {
                   // Passes optional arguments to CMake.
                   arguments "-DANDROID_TOOLCHAIN=clang"

                   // Sets a flag to enable format macro constants for the C compiler.
                   cFlags "-std=c99 -fintegrated-as -D__STDC_FORMAT_MACROS"
                   cppFlags "-std=c++11 -fexceptions"


                   // Sets optional flags for the C++ compiler.
                   //cppFlags "-fexceptions", "-frtti"
                   //cppFlags "-std=c99", "-fintegrated-as"

               }
           }
       }


       signingConfigs {
           release {
              storeFile file("/home/eng/workspace/_KEYSTORE/shield.upload.jks")
              storePassword "qwertqwert"
              keyAlias "upload"
              keyPassword "qwertqwert"
           }
       }


       buildTypes {
           release {
              minifyEnabled true
              proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
              applicationIdSuffix ".release"
              signingConfig signingConfigs.release
           }
           debug {
              debuggable true
           }
       }

       lintOptions {
           checkReleaseBuilds false
           // Or, if you prefer, you can continue to check for errors in release builds,
           // but continue the build even when errors are found:
           abortOnError false
       }
       externalNativeBuild {
           cmake {
               path file('CMakeLists.txt')
           }
       }
       // android.buildTypes

   } // android


dependencies {
    implementation fileTree(dir: 'libs', include: ["*.jar"])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:support-v4:28.0.0'

    implementation 'com.google.android.gms:play-services-location:16.0.0'
    implementation 'com.google.android.gms:play-services-auth:16.0.1'
    implementation 'pub.devrel:easypermissions:0.2.1'
}

